buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:0.7.0'
    }
}

apply plugin: 'android'

android {
    compileSdkVersion 19
    buildToolsVersion "19.0.1"
	
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }
    }
	
	 signingConfigs {
        myConfig {
            storeFile file("debug.keystore")
			storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }
	
	  buildTypes {
        release {
            signingConfig signingConfigs.myConfig
        }
    }
}
import com.android.builder.DefaultManifestParser


def getVersionName(manifestFile){
	def manifestParser = new DefaultManifestParser();
	return manifestParser.getVersionName(manifestFile);
}

def getVersionCode(manifestFile){
	def manifestParser = new DefaultManifestParser();
	return manifestParser.getVersionCode(manifestFile);
}

//gradle build or gradle aR(assembleRelease)
android.applicationVariants.all { variant ->
	println "${variant.name} output ${variant.outputFile.name}";
	if (variant.zipAlign) {
		def manifestFile = file(android.sourceSets.main.manifest.srcFile);
		def versionName = getVersionName(manifestFile);
		def versionCode = getVersionCode(manifestFile);
		def apk = variant.outputFile;
		def newName = apk.name.replace(".apk", "-${versionName}-[${versionCode}].apk");
		variant.outputFile = new File(apk.parentFile, newName);
    }
}
