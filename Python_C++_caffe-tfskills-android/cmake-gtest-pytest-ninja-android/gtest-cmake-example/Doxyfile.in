PROJECT_NAME           = "@CMAKE_PROJECT_NAME@"  
PROJECT_NUMBER         = @VERSION_MAJOR@.@VERSION_MINOR@.@VERSION_PATCH@  
STRIP_FROM_PATH        = @PROJECT_SOURCE_DIR@ \  
                         @PROJECT_BINARY_DIR@  
INPUT                  = @doxy_main_page@ \  
                         @PROJECT_SOURCE_DIR@ \  
                         @PROJECT_BINARY_DIR@  
FILE_PATTERNS          = *.h \  
                         *.cpp \
			 *.hpp \
		         *.cc   
RECURSIVE              = YES  
EXTRACT_ALL            = YES  
EXTRACT_PRIVATE        = YES  
EXTRACT_STATIC         = YES  
EXCLUDE_PATTERNS       = */thirdparty/*  
USE_MDFILE_AS_MAINPAGE = @doxy_main_page@  

To change the version number put this in one of your CMakeLists.txt files:
# The project version number.
set(VERSION_MAJOR   0   CACHE STRING "Project major version number.")
set(VERSION_MINOR   0   CACHE STRING "Project minor version number.")
set(VERSION_PATCH   1   CACHE STRING "Project patch version number.")
mark_as_advanced(VERSION_MAJOR VERSION_MINOR VERSION_PATCH)



  
CLASS_GRAPH            = YES  
  
# If the COLLABORATION_GRAPH tag is set to YES then doxygen will generate a  
# graph for each documented class showing the direct and indirect implementation  
# dependencies (inheritance, containment, and class references variables) of the  
# class with other documented classes.  
# The default value is: YES.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
COLLABORATION_GRAPH    = YES  
  
# If the GROUP_GRAPHS tag is set to YES then doxygen will generate a graph for  
# groups, showing the direct groups dependencies.  
# The default value is: YES.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
GROUP_GRAPHS           = YES  
  
# If the UML_LOOK tag is set to YES doxygen will generate inheritance and  
# collaboration diagrams in a style similar to the OMG's Unified Modeling  
# Language.  
# The default value is: NO.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
EXTRACT_ALL            = YES
HAVE_DOT               = YES

UML_LOOK               = YES  
  
# If the UML_LOOK tag is enabled, the fields and methods are shown inside the  
# class node. If there are many fields or methods and many nodes the graph may  
# become too big to be useful. The UML_LIMIT_NUM_FIELDS threshold limits the  
# number of items for each type to make the size more manageable. Set this to 0  
# for no limit. Note that the threshold may be exceeded by 50% before the limit  
# is enforced. So when you set the threshold to 10, up to 15 fields may appear,  
# but if the number exceeds 15, the total amount of fields shown is limited to  
# 10.  
# Minimum value: 0, maximum value: 100, default value: 10.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
UML_LIMIT_NUM_FIELDS   = 10  
  
# If the TEMPLATE_RELATIONS tag is set to YES then the inheritance and  
# collaboration graphs will show the relations between templates and their  
# instances.  
# The default value is: NO.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
TEMPLATE_RELATIONS     = NO  
  
# If the INCLUDE_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are set to  
# YES then doxygen will generate a graph for each documented file showing the  
# direct and indirect include dependencies of the file with other documented  
# files.  
# The default value is: YES.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
INCLUDE_GRAPH          = YES  
  
# If the INCLUDED_BY_GRAPH, ENABLE_PREPROCESSING and SEARCH_INCLUDES tags are  
# set to YES then doxygen will generate a graph for each documented file showing  
# the direct and indirect include dependencies of the file with other documented  
# files.  
# The default value is: YES.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
INCLUDED_BY_GRAPH      = YES  
  
# If the CALL_GRAPH tag is set to YES then doxygen will generate a call  
# dependency graph for every global function or class method.  
#  
# Note that enabling this option will significantly increase the time of a run.  
# So in most cases it will be better to enable call graphs for selected  
# functions only using the \callgraph command.  
# The default value is: NO.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
CALL_GRAPH             = YES  
  
# If the CALLER_GRAPH tag is set to YES then doxygen will generate a caller  
# dependency graph for every global function or class method.  
#  
# Note that enabling this option will significantly increase the time of a run.  
# So in most cases it will be better to enable caller graphs for selected  
# functions only using the \callergraph command.  
# The default value is: NO.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
CALLER_GRAPH           = YES  
  
# If the GRAPHICAL_HIERARCHY tag is set to YES then doxygen will graphical  
# hierarchy of all classes instead of a textual one.  
# The default value is: YES.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
GRAPHICAL_HIERARCHY    = YES  
  
# If the DIRECTORY_GRAPH tag is set to YES then doxygen will show the  
# dependencies a directory has on other directories in a graphical way. The  
# dependency relations are determined by the #include relations between the  
# files in the directories.  
# The default value is: YES.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
DIRECTORY_GRAPH        = YES  
  
# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images  
# generated by dot.  
# Note: If you choose svg you need to set HTML_FILE_EXTENSION to xhtml in order  
# to make the SVG files visible in IE 9+ (other browsers do not have this  
# requirement).  
# Possible values are: png, jpg, gif and svg.  
# The default value is: png.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
DOT_IMAGE_FORMAT       = png  
  
# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to  
# enable generation of interactive SVG images that allow zooming and panning.  
#  
# Note that this requires a modern browser other than Internet Explorer. Tested  
# and working are Firefox, Chrome, Safari, and Opera.  
# Note: For IE 9+ you need to set HTML_FILE_EXTENSION to xhtml in order to make  
# the SVG files visible. Older versions of IE do not have SVG support.  
# The default value is: NO.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
INTERACTIVE_SVG        = NO  
  
# The DOT_PATH tag can be used to specify the path where the dot tool can be  
# found. If left blank, it is assumed the dot tool can be found in the path.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
DOT_PATH               = "c:/Program Files (x86)/graphviz/bin"  
  
# The DOTFILE_DIRS tag can be used to specify one or more directories that  
# contain dot files that are included in the documentation (see the \dotfile  
# command).  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
DOTFILE_DIRS           =   
  
# The MSCFILE_DIRS tag can be used to specify one or more directories that  
# contain msc files that are included in the documentation (see the \mscfile  
# command).  
  
MSCFILE_DIRS           =   
  
# The DIAFILE_DIRS tag can be used to specify one or more directories that  
# contain dia files that are included in the documentation (see the \diafile  
# command).  
  
DIAFILE_DIRS           =   
  
# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of nodes  
# that will be shown in the graph. If the number of nodes in a graph becomes  
# larger than this value, doxygen will truncate the graph, which is visualized  
# by representing a node as a red box. Note that doxygen if the number of direct  
# children of the root node in a graph is already larger than  
# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note that  
# the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.  
# Minimum value: 0, maximum value: 10000, default value: 50.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
DOT_GRAPH_MAX_NODES    = 50  
  
# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the graphs  
# generated by dot. A depth value of 3 means that only nodes reachable from the  
# root by following a path via at most 3 edges will be shown. Nodes that lay  
# further from the root node will be omitted. Note that setting this option to 1  
# or 2 may greatly reduce the computation time needed for large code bases. Also  
# note that the size of a graph can be further restricted by  
# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.  
# Minimum value: 0, maximum value: 1000, default value: 0.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
MAX_DOT_GRAPH_DEPTH    = 0  
  
# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent  
# background. This is disabled by default, because dot on Windows does not seem  
# to support this out of the box.  
#  
# Warning: Depending on the platform used, enabling this option may lead to  
# badly anti-aliased labels on the edges of a graph (i.e. they become hard to  
# read).  
# The default value is: NO.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
DOT_TRANSPARENT        = NO  
  
# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output  
# files in one run (i.e. multiple -o and -T options on the command line). This  
# makes dot run faster, but since only newer versions of dot (>1.8.10) support  
# this, this feature is disabled by default.  
# The default value is: NO.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
DOT_MULTI_TARGETS      = NO  
  
# If the GENERATE_LEGEND tag is set to YES doxygen will generate a legend page  
# explaining the meaning of the various boxes and arrows in the dot generated  
# graphs.  
# The default value is: YES.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
GENERATE_LEGEND        = YES  
  
# If the DOT_CLEANUP tag is set to YES doxygen will remove the intermediate dot  
# files that are used to generate the various graphs.  
# The default value is: YES.  
# This tag requires that the tag HAVE_DOT is set to YES.  
  
DOT_CLEANUP            = YES  
