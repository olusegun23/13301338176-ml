<project name="EntropyTriangle" default="make_package" basedir=".">
<!-- 
  ===========================================================================
   Ant build file for EntropyTriangle, a weka package. 

   Type ant -projecthelp for targets and descriptions.

   $Revision: 0003 $
  ===========================================================================
-->

      
  <presetdef name="my.javac">
    <javac source="1.7" target="1.7"
            includeantruntime="false" 
            fork="yes" memoryMaximumSize="${javac_max_memory}"
            optimize="${optimization}"
            debug="${debug}"
            deprecation="${deprecation}"/>
  </presetdef>

  <!-- set global properties for this build -->
  <property name="package"  value="${ant.project.name}" />
  <property name="src" value="src/main/java"/>
  <property name="src-test" value="src/test/java"/>
<!--NO LIBS USED  <property name="lib" value="lib" /> -->
  <property name="build" value="build"/>
  <property name="dist"  value="dist"/>
  <property name="doc"  value="doc"/>
  <property name="javac_max_memory" value="256m"/>
  <property name="debug" value="on" />

  <target name="init_all">
    <!-- Create the time stamp -->
    <tstamp/>
  </target>

   <!-- general classpath definition, incl. CLASSPATH env. variable,
   // but jars in lib directory have precedence over the CLASSPATH variable -->
  <path id="project.class.path">
<!--NO LIBS USED    <fileset dir="${lib}">
      <include name="*.jar"/>
      <include name="*.zip"/>
    </fileset> -->
    <pathelement location="${build}/classes"/>
    <pathelement location="${build}/testcases"/>
    <pathelement path="${java.class.path}" />
  </path>

<!-- 
 ============================================================================
 Compilation and documentation making stuff
 ============================================================================
-->

  <target name="init_compile" depends="init_all">
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}/classes"/>
  </target>

  <!-- Compile the java code from ${src}/weka into ${build}/classes -->
  <target name="compile" depends="init_compile" 
   description="Compile package and deposit class files in build/classes">
    <my.javac srcdir="${src}" 
        destdir="${build}/classes">
      <classpath refid="project.class.path"/> 
    </my.javac>
    <copy todir="${build}/classes" >
       <fileset dir="${src}">
         <include name="**/*.gif"/>
         <include name="**/*.png"/>
         <include name="**/*.jpeg"/>
         <include name="**/*.jpg"/>
         <include name="**/*.props"/>
         <include name="**/*.txt"/>
         <include name="**/*.xml"/>
         <include name="**/*.cup"/>
         <include name="**/*.flex"/>
         <include name="**/*.jflex"/>
         <include name="**/*.properties"/>
         <include name="**/*.default"/>
       </fileset>
    </copy>
  </target>

  <!-- Make the javadocs -->
  <target name="docs" 
          depends="init_all" 
          description="Make javadocs into ./doc">
    <mkdir dir="${doc}"/>
    <javadoc Windowtitle="entropy-triangle-weka-package"
             Doctitle="Entropy Triangle Weka package, API Specification"
  	         sourcepath="${src}" 
             classpathref="project.class.path"
             destdir="${doc}"
             Author="yes" 
             Public="yes"
             maxmemory="256m">
    	<header>
    		<![CDATA[
    			<script type='text/javascript' src='http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML'></script>
    		    ]]>
    	</header>
    	<bottom>
    		<![CDATA[
    		<a href="https://github.com/apastor/entropy-triangle-weka-package"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/a6677b08c955af8400f44c6298f40e7d19cc5b2d/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f677261795f3664366436642e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_gray_6d6d6d.png"></a>
    		]]>
    	</bottom>
    	<link href="http://weka.sourceforge.net/doc.dev/"/>
    	<link href="http://docs.oracle.com/javase/7/docs/api/" />
    </javadoc>
  </target> 
	 

<!--
  ===========================================================================
  Unit testing stuff
  ===========================================================================
-->
<!-- Junit testing initialization -->
  <target name="init_tests" depends="init_all">
    <available property="junit.present" classname="junit.framework.TestCase"/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}/testcases"/>
    <!-- make this if it doesn't exist so that the compile_test task doesn't faile for 
         stuff that doesn't have test cases -->
    <mkdir dir="${src-test}"/>
  </target>

  <!-- compile the testcases -->
  <target name="compile_tests" depends="init_tests, compile" 
   description="Compile unit tests into build/testcases">
     <my.javac srcdir="${src-test}" 
            destdir="${build}/testcases">
       <classpath refid="project.class.path" /> 
     </my.javac>
     <copy todir="${build}/testcases" >
       <fileset dir="${src-test}">
          <include name="**/*.arff"/>
          <include name="**/*.cost"/>
          <include name="**/*.xml"/>
          <include name="**/*.matrix"/>
       </fileset>
     </copy>
  </target>

  <!-- Put everything in ${build}/testcases into the ${package}-tests.jar file -->
  <target name="jar_tests" depends="compile_tests, init_dist"
   description="Creates a jar file with the test cases in ./dist.">
    <jar jarfile="${package}-tests.jar" 
      basedir="${build}/testcases" />
        <jar jarfile="${package}-tests.jar" 
          basedir="${build}/classes"
          update="true" />
  </target>

<!--
  ===========================================================================
  Release making stuff
  ===========================================================================
-->

  <target name = "init_dist" depends="init_all">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>
  </target>

  <!-- Put everything in ${build}/classes into the ${package}.jar file -->
  <target name="exejar" depends="compile, docs, init_dist"
   description="Create a binary jar file in ./dist">
    <jar jarfile="${dist}/${package}.jar" 
      basedir="${build}/classes">
    </jar>
    <copy file="${dist}/${package}.jar" todir="." />
  </target>

  <target name="make_package" depends="clean, exejar" description="Make the package zip file.">
    <mkdir dir="${dist}/${package}"/>
    <copy todir="${dist}/${package}">
      <fileset dir="${dist}">
        <include name="*.jar"/>
      </fileset>
      <fileset dir="./">
        <include name="*.props"/>
        <include name="*.txt"/>
        <include name="*.md"/>
      </fileset>
    </copy>
    <delete>
      <fileset dir="${dist}">
        <include name="*.jar"/>
      </fileset>
    </delete>
<!--NO LIBS USED
    <mkdir dir="${dist}/${package}/lib"/>
    <copy todir="${dist}/${package}/lib" >
       <fileset dir="${lib}">
         <include name="*.jar"/>
         <include name="*.zip"/>
       </fileset>
    </copy>
-->
    <mkdir dir="${dist}/${package}/doc"/>
    <copy todir="${dist}/${package}/doc" >
       <fileset dir="${doc}">
         <include name="**/*"/>
       </fileset>
    </copy>
    <mkdir dir="${dist}/${package}/src"/>
    <copy todir="${dist}/${package}" >
       <fileset dir=".">
         <include name="*.xml"/>
         <include name="src/**/*.excludes"/>
         <include name="src/**/*.gif"/>
         <include name="src/**/*.java"/>
         <include name="src/**/*.jpeg"/>
         <include name="src/**/*.jpg"/>
         <include name="src/**/*.props"/>
         <include name="src/**/*.txt"/>
         <include name="src/**/*.xml"/>
         <include name="src/**/*.cup"/>
         <include name="src/**/*.flex"/>
         <include name="src/**/*.jflex"/>
         <include name="src/**/*.properties"/>
         <include name="src/**/*.default"/>
         <include name="src/**/*.cost"/>
         <include name="src/**/*.arff"/>
         <include name="src/**/*.matrix"/>
       </fileset>
    </copy>
    <zip destfile="${dist}/${package}.zip" 
      basedir="${dist}/${package}">
    </zip>
    <copy file="${dist}/${package}.zip" todir="." />
  </target>

  <!-- Put all .java, and .props files into ${dist}/${package}-src.jar-->
  <target name="srcjar" depends="init_dist, init_all"
   description="Create a jar file containing weka source in ./dist.">  
    <!-- jar up the source -->
    <jar jarfile="${dist}/${package}-src.jar" 
      basedir=".">
      <include name="*.xml"/>
      <include name="src/**/*.excludes"/>
      <include name="src/**/*.gif"/>
      <include name="src/**/*.java"/>
      <include name="src/**/*.jpeg"/>
      <include name="src/**/*.jpg"/>
      <include name="src/**/*.props"/>
      <include name="src/**/*.txt"/>
      <include name="src/**/*.xml"/>
      <include name="src/**/*.cup"/>
      <include name="src/**/*.flex"/>
      <include name="src/**/*.jflex"/>
      <include name="src/**/*.properties"/>
      <include name="src/**/*.default"/>
      <include name="src/**/*.cost"/>
      <include name="src/**/*.arff"/>
      <include name="src/**/*.matrix"/>
<!-- NO LIBS USED      <include name="lib/**/*.jar"/> -->
    </jar>
  </target>

<!-- Clean -->
  <target name="clean" depends="init_all"
   description="Removes the build, dist and docs directories">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
  	<delete dir="${doc}"/>
  </target>
<!--
  <target name="superclean" depends="clean"
   description="Clean plus removes source trees! and doc directories">
  <! WARNING, this deletes the source and doc directories -->
<!--    <delete dir="${src}"/>
    <delete dir="${doc}"/>
  </target>
-->
</project>
